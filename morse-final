/*LETRA  ASCII  MORSE 
ASCII = 32 -> "espacio"*/

String morseLetras[] = {
".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..", // a-i 
".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.", // j-r 
"...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.." // s-z
};

int retardoPunto = 200;
int retardoRaya  = retardoPunto*3;
int retardoEspacio = retardoPunto*4;

int pinMorse = 8;
int pinEspacio = 7;

void setup() {
  //Configurar pines de salida
  pinMode(pinMorse, OUTPUT);
  pinMode(pinEspacio, OUTPUT);
  Serial.begin(9600);

}

void loop() {
  //Completar código adecuadamente
  char ch;
  String ch_morse;
  
  int ch_valor;
  
  if (Serial.available()){
    ch = Serial.read();

    ch_valor = ch;
    
    Serial.print(ch);
    Serial.print(" ");
    if(ch_valor == 32){
      Serial.println("Espacio");
      //Agegar funcion
      parpadeoEspacio();
    }
    else{
      ch_morse = morseLetras[ch_valor - 97];
      Serial.println(ch_morse);
      //dumbo, no estaba pasando anda a secuencia 77
      String secuenciaMorse = ch_morse;
      //Agegar funcion      
      secuencia(secuenciaMorse);
    }
  }
}


void secuencia(String secuenciaMorse){
  //Completar código adecuadamente
  //Llama en forma iterativa a la función
  //parpadeoPuntoRaya()
  
  int largo = secuenciaMorse.length();
  for(int i=1; i<largo; i++){
    if(secuenciaMorse[i] == '.'){
      char puntoRaya ='.';
      parpadeoPuntoRaya(puntoRaya);
    }
    else if(secuenciaMorse[i] == '-'){
        char puntoRaya = '-';
        parpadeoPuntoRaya(puntoRaya);
    }
    /*else if(secuenciaMorse[i] == ' '){
      parpadeoEspacio();
    }*/
  }
}

void parpadeoPuntoRaya(char puntoRaya){
  //Completar código adecuadamente
  
  if(puntoRaya == '.'){
    digitalWrite(pinMorse, HIGH);
    delay(retardoPunto);
    digitalWrite(pinMorse, LOW);
    delay(retardoPunto);
  }
  else{
    digitalWrite(pinMorse, HIGH);
    delay(retardoRaya);
    digitalWrite(pinMorse, LOW);
    delay(retardoRaya);
  }
}

void parpadeoEspacio(){
  digitalWrite(pinEspacio,HIGH);
  delay(retardoEspacio);
  digitalWrite(pinEspacio, LOW);
  //Completar código adecuadamente
}
